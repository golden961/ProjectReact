{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\React JS\\\\frontend\\\\src\\\\views\\\\Cabinet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Cabinet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cabinet({\n  token\n}) {\n  _s();\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch('/api/user', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n            // Добавьте заголовок с токеном, если вы используете аутентификацию\n            // 'Authorization': `Bearer ${yourToken}`,\n          }\n        });\n        if (response.ok) {\n          const user = await response.json();\n          setUserData(user);\n        } else {}\n      } catch (error) {\n        console.error(error);\n        // Обработка ошибок\n      }\n    };\n    fetchUserData();\n  }, []);\n  function changeEmail() {\n    const email = document.getElementById('email').value;\n    const validEmail = email.match(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g);\n    if (!validEmail) {\n      document.getElementById('emailMessage').innerText = \"Вы ввели данные неправильно!\";\n      return;\n    }\n    const data = {\n      token: token,\n      email: email\n    };\n    console.log(data);\n    const api = 'http://127.0.0.1:9001/user/changeEmail';\n    fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.json()).then(result => {\n      console.log(result);\n      document.getElementById('emailMessage').innerText = result.message;\n    });\n  }\n  function changePass() {\n    const pass = document.getElementById('pass').value;\n    if (pass.length === 0) {\n      document.getElementById('emailMessage').innerText = \"Вы ввели данные неправильно!\";\n      return;\n    }\n    const data = {\n      token: token,\n      password: pass\n    };\n    console.log(data);\n    const api = 'http://127.0.0.1:9001/user/changePassword';\n    fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.json()).then(result => {\n      console.log(result);\n      document.getElementById('passMessage').innerText = result.message;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Cabinet\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041B\\u0438\\u0447\\u043D\\u044B\\u0439 \\u043A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"showEmail\",\n      children: [\"\\u0412\\u0430\\u0448 E-Mail: \", userData.email, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      placeholder: \"E-Mail\",\n      type: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"sendEmail\",\n      onClick: changeEmail,\n      children: \"\\u0421\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C E-Mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"emailMessage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"pass\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"sendPass\",\n      onClick: changePass,\n      children: \"\\u0421\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"passMessage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(Cabinet, \"Q/bN2hINckB+VINYSZfns3MkAk8=\");\n_c = Cabinet;\nexport default Cabinet;\nvar _c;\n$RefreshReg$(_c, \"Cabinet\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Cabinet","token","_s","userData","setUserData","fetchUserData","response","fetch","method","headers","ok","user","json","error","console","changeEmail","email","document","getElementById","value","validEmail","match","innerText","data","log","api","body","JSON","stringify","then","result","message","changePass","pass","length","password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anton/Desktop/React JS/frontend/src/views/Cabinet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Cabinet.css';\r\n\r\nfunction Cabinet({ token }) {\r\n    const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch('/api/user', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            // Добавьте заголовок с токеном, если вы используете аутентификацию\r\n            // 'Authorization': `Bearer ${yourToken}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const user = await response.json();\r\n          setUserData(user);\r\n        } else {\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Обработка ошибок\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n    function changeEmail() {\r\n        const email = document.getElementById('email').value\r\n\r\n        const validEmail = email.match(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g)\r\n\r\n        if (!validEmail) {\r\n            document.getElementById('emailMessage').innerText = \"Вы ввели данные неправильно!\"\r\n            return\r\n        }\r\n\r\n        const data = {\r\n            token: token,\r\n            email: email\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        const api = 'http://127.0.0.1:9001/user/changeEmail'\r\n\r\n        fetch(api, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then((result) => result.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                document.getElementById('emailMessage').innerText = result.message\r\n            })\r\n    }\r\n\r\n    function changePass() {\r\n        const pass = document.getElementById('pass').value\r\n\r\n        if (pass.length === 0) {\r\n            document.getElementById('emailMessage').innerText = \"Вы ввели данные неправильно!\"\r\n            return\r\n        }\r\n\r\n        const data = {\r\n            token: token,\r\n            password: pass\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        const api = 'http://127.0.0.1:9001/user/changePassword'\r\n\r\n        fetch(api, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then((result) => result.json())\r\n            .then((result) => {\r\n                console.log(result)\r\n                document.getElementById('passMessage').innerText = result.message\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Cabinet\">\r\n            <h1>Личный кабинет</h1>\r\n            <p id='showEmail'>Ваш E-Mail: {userData.email} </p>\r\n            <input id='email' placeholder='E-Mail' type='email' />\r\n            <button id='sendEmail' onClick={changeEmail}>Сменить E-Mail</button>\r\n            <p id='emailMessage'></p>\r\n            <input id='pass' placeholder='Пароль' type='password' />\r\n            <button id='sendPass' onClick={changePass}>Сменить пароль</button>\r\n            <p id='passMessage'></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cabinet;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}